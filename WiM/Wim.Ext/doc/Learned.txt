0.  npm install vss-web-extension-sdk
	npm i -g tfx-cli
0.1 Maak extensie
	tfx extension create --manifest-globs extManifest.json

1. Wat is een extensie ? 
	Een HTML pagina wat via Extension Points in een Iframe geladen wordt. 
	Op welke punten DevOps uitgebreid kan worden ( extension points) staat vast. 

2. Debugbaar maken van de extensie
	In de manifest BaseUrl opnemen, zodat DevOps daarvandaan de pagina laadt. 
	De Url is de https url van de Asp.net applicatie wat vs automatisch geeft. (project properties)
	De start url in het zelfde project moet dat zijn de URL in devops van de extensie. (De Url nadat je op de extensie geklikt hebt)

3. Icoon in linkermenu 
	Om een icon ook in de linkermenu te krijgen, moet het icon.png heten en 32x32 groot zijn
	Misschien nog experimenteren met 16x16
	Via de manifest in de package sluiten.

4. Instantie van een dialog opvragen
	Om instantie van een dialog object op te kunnen vragen via dialogservice.getConstributionInstance(...), 
	dan moet het eerst geregistreerd worden in de HTML van de dialog met VSS.register(contrinutionId, data);
	LET OP dat je eerst de VSS.register uitvoert, VOORDAT je dialogservice.getConstributionInstance(...) wordt gedaan.
	
5. Scope van de extensie
	In de manifest kan je een scope aangeven. Dat bepaalt tot welke gebieden de extensie toegang heeft 
	en wat het daar mag doen. Zo geeft "vso.work" de extensie toegang tot work items, met alleen leesrechten. 
	Met "vso.work_write" mag de extensie ook workitems aanmaken of wijzigen en met "vso.work_full" heeft het full access.
	https://docs.microsoft.com/nl-nl/azure/devops/extend/develop/manifest?view=azure-devops#scopes

6. Binnen wigo is een releae pieline opgezet, om de extensie van die pipeline te installeren. 
	Er kon geen koppeling gelegd worden tussen een publiek GitHub account. 
	Opgelost door de remote van de solution te wisselen tussen github en locale azure devops repo. 
	Synchen met GitHub -> switchen naar locale repo -> Pushen van wijzigingen -> Builden - Releasen
	Wisselen van repo kan eenvoudig door in de root van de solution in de (verborgen) .git folder de url in
	de config aan te passen.
	Wijzig
	[remote "origin"]
	url = https://devops-tst.wigo4it.local/tfs/DefaultCollection/DevOps%20Tooling/_git/WiM
	naar
	[remote "origin"]
	url = https://github.com/kryban/WiM
	en doe een sync om nieuwste wijzigingen binnen te halen.
	Wijzig de url weer teurg en doe een push van de hele branch.


	
